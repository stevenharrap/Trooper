@using Trooper.Testing.Web.Models
@using Trooper.Ui.Mvc.Bootstrap
@using Trooper.Ui.Mvc.Bootstrap.Controls
@using Trooper.Ui.Mvc.Bootstrap.Controls.Options
@using Trooper.Ui.Mvc.Cruncher
@using Trooper.Ui.Interface.Mvc.Cruncher
@using Trooper.Utility

@model Trooper.Testing.Web.Models.DateTimePickerModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Testing bootstrap controls</title>
    @{
        var cruncher = new Cruncher(Html);
	    var bsf = new Form<DateTimePickerModel>(Html, new FormHeader {Action = Url.Action("Submit", "DateTimePicker")});

		Trooper.Ui.Mvc.Bootstrap.Html<DateTimePickerModel>.Init(Html);
    }

    @cruncher.Header()
</head>

<body>
    @bsf.BeginForm()

    <div class="container">
        <h2>DateTimePicker Test Area</h2>       

        <hr />

	    <div class="row">
		    <div class="col-xs-4">
			    @bsf.DateTimePickerFor(m => m.TestDt01, new DateTimePicker {Title = "Date time: Date", DateTimeFormat = DateTimeFormat.Date})
			    @bsf.DateTimePickerFor(m => m.TestDt02, new DateTimePicker {Title = "Date time: Date &amp time", DateTimeFormat = DateTimeFormat.DateAndTime})
			    @bsf.DateTimePickerFor(m => m.TestDt03, new DateTimePicker {Title = "Date time: Date &amp time (ns)", DateTimeFormat = DateTimeFormat.DateTimeNoSeconds})
		    </div>
            <div class="col-xs-4">
                @bsf.DateTimePickerFor(m => m.TestDt04, new DateTimePicker { Title = "Date time: Time", DateTimeFormat = DateTimeFormat.Time })
                @bsf.DateTimePickerFor(m => m.TestDt05, new DateTimePicker { Title = "Date time: Time (ns)", DateTimeFormat = DateTimeFormat.TimeNoSeconds })
                @bsf.DateTimePickerFor(m => m.TestDt06, new DateTimePicker { Title = "Preset date time", DateTimeFormat = DateTimeFormat.DateAndTime })
                @bsf.DateTimePickerFor(m => m.TestDt07, new DateTimePicker { Title = "-15:00 Date time", DateTimeFormat = DateTimeFormat.DateAndTime, UtcOffset = -15 * 60 })
            </div>
        </div>

        @bsf.Button(new Button { Title = "Refresh", ButtonType = ButtonTypes.Inverse, Submit = true })
    </div>

    @bsf.EndForm()
</body>
</html>