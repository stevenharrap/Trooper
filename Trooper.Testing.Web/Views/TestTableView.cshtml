@using Trooper.Testing.Web.Models
@using Trooper.Ui.Mvc.Rabbit
@using Trooper.Ui.Mvc.Rabbit.Controls
@using Trooper.Ui.Mvc.Rabbit.Controls.Options
@using Trooper.Ui.Mvc.Cruncher
@using Trooper.Ui.Interface.Mvc.Cruncher
@using Trooper.Ui.Mvc.Rabbit.TableClasses
@using Trooper.Utility
@using System.Linq.Expressions;
@using Trooper.Ui.Mvc.Rabbit.Props
@using Trooper.Ui.Mvc.Rabbit.TableClasses.Footer;

@model Trooper.Testing.Web.Models.TestTableModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Testing table controls</title>
    @{
        var goRabbit = new GoRabbit<TestTableModel>(Html);
        var form = goRabbit.NewForm(new FormControl { Action = Url.Action("Submit", "TestTable") });
    }

    @goRabbit.Header()
</head>

<body>
    @form.BeginForm()

    <div class="container">
        <h2>Upload Test Area</h2>

	    <hr/>

        @{
            var tProps = new TableControl<BaseballMaster>
            {
                Source = Model.BaseballMasters,
                Caption = "Baseball masters",
                HumanizeHeaders = true,
                PageSize = 20,
                Striped = true,
                Hover = true,
                FooterRows = new[] { new Row { Cells = new [] { new Cell { Content = "A year Sum!" } }  }  }
            };

            tProps.AddKey(k => k.PlayerID);                       

            tProps.AddColumn(new Column<BaseballMaster> { 
                Value = c => c.PlayerID, 
                SortIdentity = c => c.PlayerID,
                HeaderMedium = "PID" 
            });
            
            tProps.AddColumn(new Column<BaseballMaster> { 
                Value = c => string.Format("{0}, {1}", 
                c.NameLast, c.NameFirst), 
                Header = "Player name", 
                SortIdentity = c => c.NameLast,
                HeaderMedium = "Name",
				VisibleInModes = new[] { ScreenMode.Large, ScreenMode.Medium } 
            });

            tProps.AddColumn(new Column<BaseballMaster> { 
                Value = c => c.BirthYear, 
                Humanize = false,
                HeaderExtraSmall = "Bth Y",
				VisibleInModes = new []{ ScreenMode.Large }
            });

            tProps.AddColumn(new Column<BaseballMaster> { Value = c => c.BirthCity, Format = "lives in {0}" });            
        }

        @(form.TableFor<BaseballMaster>(m => m.TbMdl001, tProps))

        @form.Button(new Button { Title = "Refresh", ButtonType = ButtonTypes.Inverse, Submit = true })
    </div>

    @form.EndForm()
</body>
</html>