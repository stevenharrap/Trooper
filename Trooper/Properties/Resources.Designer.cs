//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trooper.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Trooper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CN.
        /// </summary>
        public static string ActiveDirectoryCn {
            get {
                return ResourceManager.GetString("ActiveDirectoryCn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to defaultNamingContext.
        /// </summary>
        public static string ActiveDirectoryDefaultNamingContext {
            get {
                return ResourceManager.GetString("ActiveDirectoryDefaultNamingContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to department.
        /// </summary>
        public static string ActiveDirectoryDepartment {
            get {
                return ResourceManager.GetString("ActiveDirectoryDepartment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to description.
        /// </summary>
        public static string ActiveDirectoryDescription {
            get {
                return ResourceManager.GetString("ActiveDirectoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to displayName.
        /// </summary>
        public static string ActiveDirectoryDisplayName {
            get {
                return ResourceManager.GetString("ActiveDirectoryDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DN.
        /// </summary>
        public static string ActiveDirectoryDn {
            get {
                return ResourceManager.GetString("ActiveDirectoryDn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dnsHostName.
        /// </summary>
        public static string ActiveDirectoryDnsHostName {
            get {
                return ResourceManager.GetString("ActiveDirectoryDnsHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to givenName.
        /// </summary>
        public static string ActiveDirectoryGivenName {
            get {
                return ResourceManager.GetString("ActiveDirectoryGivenName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to initials.
        /// </summary>
        public static string ActiveDirectoryInitials {
            get {
                return ResourceManager.GetString("ActiveDirectoryInitials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP://{0}/{1}.
        /// </summary>
        public static string ActiveDirectoryLdapPathFormat {
            get {
                return ResourceManager.GetString("ActiveDirectoryLdapPathFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mail.
        /// </summary>
        public static string ActiveDirectoryMail {
            get {
                return ResourceManager.GetString("ActiveDirectoryMail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to memberof.
        /// </summary>
        public static string ActiveDirectoryMemberOf {
            get {
                return ResourceManager.GetString("ActiveDirectoryMemberOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to middleName.
        /// </summary>
        public static string ActiveDirectoryMiddleName {
            get {
                return ResourceManager.GetString("ActiveDirectoryMiddleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mobile.
        /// </summary>
        public static string ActiveDirectoryMobile {
            get {
                return ResourceManager.GetString("ActiveDirectoryMobile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to physicalDeliveryOfficeName.
        /// </summary>
        public static string ActiveDirectoryPhysicalDeliveryOfficeName {
            get {
                return ResourceManager.GetString("ActiveDirectoryPhysicalDeliveryOfficeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP://RootDSE.
        /// </summary>
        public static string ActiveDirectoryRoot {
            get {
                return ResourceManager.GetString("ActiveDirectoryRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (SAMAccountName={0}).
        /// </summary>
        public static string ActiveDirectorySamAccountFormat {
            get {
                return ResourceManager.GetString("ActiveDirectorySamAccountFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sn.
        /// </summary>
        public static string ActiveDirectorySn {
            get {
                return ResourceManager.GetString("ActiveDirectorySn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to telephoneNumber.
        /// </summary>
        public static string ActiveDirectoryTelephoneNumber {
            get {
                return ResourceManager.GetString("ActiveDirectoryTelephoneNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to userPrincipalName.
        /// </summary>
        public static string ActiveDirectoryUserPrincipalName {
            get {
                return ResourceManager.GetString("ActiveDirectoryUserPrincipalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * Bootstrap v3.3.2 (http://getbootstrap.com)
        /// * Copyright 2011-2015 Twitter, Inc.
        /// * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
        /// */
        ///
        ////*! normalize.css v3.0.2 | MIT License | git.io/normalize */
        ///html {
        ///  font-family: sans-serif;
        ///  -webkit-text-size-adjust: 100%;
        ///      -ms-text-size-adjust: 100%;
        ///}
        ///body {
        ///  margin: 0;
        ///}
        ///article,
        ///aside,
        ///details,
        ///figcaption,
        ///figure,
        ///footer,
        ///header,
        ///hgroup,
        ///main,
        ///menu,
        ///nav,
        ///section,
        ///summary {
        ///  display: block;
        ///}
        ///audio,
        ///canvas,
        ///progress,
        ///video [rest of string was truncated]&quot;;.
        /// </summary>
        public static string bootstrap_css {
            get {
                return ResourceManager.GetString("bootstrap_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;version&quot;:3,&quot;sources&quot;:[&quot;bootstrap.css&quot;,&quot;less/normalize.less&quot;,&quot;less/print.less&quot;,&quot;less/glyphicons.less&quot;,&quot;less/scaffolding.less&quot;,&quot;less/mixins/vendor-prefixes.less&quot;,&quot;less/mixins/tab-focus.less&quot;,&quot;less/mixins/image.less&quot;,&quot;less/type.less&quot;,&quot;less/mixins/text-emphasis.less&quot;,&quot;less/mixins/background-variant.less&quot;,&quot;less/mixins/text-overflow.less&quot;,&quot;less/code.less&quot;,&quot;less/grid.less&quot;,&quot;less/mixins/grid.less&quot;,&quot;less/mixins/grid-framework.less&quot;,&quot;less/tables.less&quot;,&quot;less/mixins/table-row.less&quot;,&quot;less/forms.less&quot;,&quot;less/mixins/form [rest of string was truncated]&quot;;.
        /// </summary>
        public static string bootstrap_css_map {
            get {
                return ResourceManager.GetString("bootstrap_css_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * Bootstrap v3.3.2 (http://getbootstrap.com)
        /// * Copyright 2011-2015 Twitter, Inc.
        /// * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
        /// */
        ///if(&quot;undefined&quot;==typeof jQuery)throw new Error(&quot;Bootstrap&apos;s JavaScript requires jQuery&quot;);+function(a){&quot;use strict&quot;;var b=a.fn.jquery.split(&quot; &quot;)[0].split(&quot;.&quot;);if(b[0]&lt;2&amp;&amp;b[1]&lt;9||1==b[0]&amp;&amp;9==b[1]&amp;&amp;b[2]&lt;1)throw new Error(&quot;Bootstrap&apos;s JavaScript requires jQuery version 1.9.1 or higher&quot;)}(jQuery),+function(a){&quot;use strict&quot;;function b(){var a=docume [rest of string was truncated]&quot;;.
        /// </summary>
        public static string bootstrap_min_js {
            get {
                return ResourceManager.GetString("bootstrap_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.button = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.url = params.url;
        ///    this.targetNewWindow = params.targetNewWindow;
        ///    this.launchLoadingOnClick = params.launchLoadingOnClick;
        ///    this.loadingScreenTitle = params.loadingScreenTitle;
        ///    this.confirmOnClick = params.confirmOnClick;
        ///    this.confirmTitle = params.confirmTitle;
        ///    this.submit = params.submit;
        ///
        ///    this.init = function () {        
        ///        $(&apos;#&apos; + this.id).click [rest of string was truncated]&quot;;.
        /// </summary>
        public static string button_js {
            get {
                return ResourceManager.GetString("button_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.checkBox = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///    this.init = function () {
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            form.addVolatileField(this.id);
        ///        }
        ///    };
        ///
        ///    trooper.ui.registry.addControl(this.id, this, &apos;checkbox&apos;);
        ///    $(document).ready($.proxy(this.init, this));
        ///
        ///    return {
        ///
        ///    };
        ///});.
        /// </summary>
        public static string checkBox_js {
            get {
                return ResourceManager.GetString("checkBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.checkBoxList = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.name = params.name;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///    this.init = function () {
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            $(&apos;[name=&apos; + this.name + &apos;]&apos;).each(function (index, value) {
        ///                form.addVolatileField($(value));
        ///            });
        ///        }
        ///    };
        ///
        ///    trooper.ui.registry.add [rest of string was truncated]&quot;;.
        /// </summary>
        public static string checkBoxList_js {
            get {
                return ResourceManager.GetString("checkBoxList_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.dateTimePicker = (function (params) {
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.format = params.format;
        ///    this.pickDate = params.pickDate;
        ///    this.pickTime = params.pickTime;
        ///    this.pickSeconds = params.pickSeconds;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///    this.popoverPlacement = params.popoverPlacement;
        ///    this.timezone = params.timezone;
        ///
        ///    this.init = function () {
        ///        this.getSelectButton().click($.proxy(this.selectButtonClick, th [rest of string was truncated]&quot;;.
        /// </summary>
        public static string dateTimePicker_js {
            get {
                return ResourceManager.GetString("dateTimePicker_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .trooper.dateTimePicker table tbody tr td.day {
        ///    cursor: pointer;   
        ///}
        ///
        ///.trooper.dateTimePicker table tr td.day:hover {
        ///    background: #333333;
        ///    color: #fff;
        ///}
        ///
        ///.trooper.dateTimePicker table tr td,
        ///.trooper.dateTimePicker table tr th {
        ///    font-size: 13px;
        ///}
        ///
        ///.trooper.dateTimePicker .date-input::-ms-clear {
        ///    display: none;
        ///}
        ///
        ///.trooper.dateTimePicker .month {
        ///    text-align: right;
        ///    font-weight: bold;
        ///}
        ///
        ///.trooper.dateTimePicker .year {
        ///}
        ///             
        ///.trooper.dateTimeP [rest of string was truncated]&quot;;.
        /// </summary>
        public static string dateTimePicker_less {
            get {
                return ResourceManager.GetString("dateTimePicker_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @font-face {
        ///    font-family: &apos;ProximaNovaRegular&apos;;
        ///    src: url(&apos;Regular.eot&apos;);
        ///    src: url(&apos;Regular.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;),
        ///         url(&apos;Regular.woff&apos;) format(&apos;woff&apos;),
        ///         url(&apos;Regular.ttf&apos;) format(&apos;truetype&apos;),
        ///         url(&apos;Regular.svg#ProximaNovaSoftRegular&apos;) format(&apos;svg&apos;);
        ///    font-weight: normal;
        ///    font-style: normal;
        ///}
        ///
        ///@font-face {
        ///    font-family: &apos;ProximaNovaMedium&apos;;
        ///    src: url(&apos;Medium.eot&apos;);
        ///    src: url(&apos;Medium.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;),        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string fonts_less {
            get {
                return ResourceManager.GetString("fonts_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.form = (function (params) {
        ///    this.id = params.id;
        ///    this.formIsDirty = false;
        ///
        ///    this.init = function ()
        ///    {        
        ///        $(&apos;#&apos; + this.id).click($.proxy(this.clicked, this));
        ///    };
        ///
        ///    /**
        ///     * Indicates that the field (which can be a field id or jquery object) is volatile
        ///     * and if it changes and the user has not saved the current record then an alert message
        ///     * should be raised if the user attempts to leave the page.
        ///     */
        ///    this.addVolatileFiel [rest of string was truncated]&quot;;.
        /// </summary>
        public static string form_js {
            get {
                return ResourceManager.GetString("form_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot; &gt;
        ///&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
        ///&lt;metadata&gt;&lt;/metadata&gt;
        ///&lt;defs&gt;
        ///&lt;font id=&quot;glyphicons_halflingsregular&quot; horiz-adv-x=&quot;1200&quot; &gt;
        ///&lt;font-face units-per-em=&quot;1200&quot; ascent=&quot;960&quot; descent=&quot;-240&quot; /&gt;
        ///&lt;missing-glyph horiz-adv-x=&quot;500&quot; /&gt;
        ///&lt;glyph horiz-adv-x=&quot;0&quot; /&gt;
        ///&lt;glyph horiz-adv-x=&quot;400&quot; /&gt;
        ///&lt;glyph unicode=&quot; &quot; /&gt;
        ///&lt;glyph unicode=&quot;*&quot; d=&quot;M600 1100q15 0 34 -1.5t30 -3.5l11 -1q10 -2 17.5  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GlyphiconsHalflingsReguarSvg {
            get {
                return ResourceManager.GetString("GlyphiconsHalflingsReguarSvg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] GlyphiconsHalflingsRegularEot {
            get {
                object obj = ResourceManager.GetObject("GlyphiconsHalflingsRegularEot", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] GlyphiconsHalflingsRegularTtf {
            get {
                object obj = ResourceManager.GetObject("GlyphiconsHalflingsRegularTtf", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] GlyphiconsHalflingsRegularWoff {
            get {
                object obj = ResourceManager.GetObject("GlyphiconsHalflingsRegularWoff", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] GlyphiconsHalflingsRegularWoff2 {
            get {
                object obj = ResourceManager.GetObject("GlyphiconsHalflingsRegularWoff2", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! jQuery v1.10.2 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license
        /////@ sourceMappingURL=jquery-1.10.2.min.map
        ///*/
        ///(function(e,t){var n,r,i=typeof t,o=e.location,a=e.document,s=a.documentElement,l=e.jQuery,u=e.$,c={},p=[],f=&quot;1.10.2&quot;,d=p.concat,h=p.push,g=p.slice,m=p.indexOf,y=c.toString,v=c.hasOwnProperty,b=f.trim,x=function(e,t){return new x.fn.init(e,t,r)},w=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=/\S+/g,C=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,N=/^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]*))$/,k=/^ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string jquery_min_js {
            get {
                return ResourceManager.GetString("jquery_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! jQuery UI - v1.11.0 - 2014-06-26
        ///* http://jqueryui.com
        ///* Includes: core.js, widget.js, mouse.js, position.js, draggable.js, droppable.js, resizable.js, selectable.js, sortable.js, accordion.js, autocomplete.js, button.js, datepicker.js, dialog.js, menu.js, progressbar.js, selectmenu.js, slider.js, spinner.js, tabs.js, tooltip.js, effect.js, effect-blind.js, effect-bounce.js, effect-clip.js, effect-drop.js, effect-explode.js, effect-fade.js, effect-fold.js, effect-highlight.js, effect-puff.js, effect-pul [rest of string was truncated]&quot;;.
        /// </summary>
        public static string jquery_ui_min_js {
            get {
                return ResourceManager.GetString("jquery_ui_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] LayoutView_cshtml {
            get {
                object obj = ResourceManager.GetObject("LayoutView_cshtml", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Affected server may require a restart..
        /// </summary>
        public static string MessageServerRestart {
            get {
                return ResourceManager.GetString("MessageServerRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.messagesPanel = (function (params)
        ///{
        ///    this.id = params.id;
        ///
        ///    this.init = function () {
        ///        $(&apos;#&apos; + this.id + &apos;.trooper.messages-panel button.close.close-bar&apos;).click(function () {
        ///            $(&apos;.trooper.messages-panel&apos;).hide(500);
        ///        });
        ///
        ///        $(&apos;#&apos; + this.id + &apos;.trooper.messages-panel button.close.open-messages&apos;).click(function () {
        ///            $(&apos;.trooper.messages-panel .messages&apos;).show(500);
        ///            $(&apos;.trooper.messages-panel button.close.open-messages&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string messagesPanel_js {
            get {
                return ResourceManager.GetString("messagesPanel_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AdditionalInfo.
        /// </summary>
        public static string MessageTitleAdditionalInfo {
            get {
                return ResourceManager.GetString("MessageTitleAdditionalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.numericBox = (function (params)
        ///{
        ///	this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.numericType = params.numericType;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///    this.minimum = parseFloat(params.minimum);
        ///
        ///    if (isNaN(this.minimum)) {
        ///        this.minimum = null;
        ///    }
        ///
        ///    this.maximum = parseFloat(params.maximum);
        ///
        ///    if (isNaN(this.maximum)) {
        ///        this.maximum = null;
        ///    }
        ///
        ///    this.decimalDigits = parseFloat(params.decimalDigits);
        ///
        ///    if ( [rest of string was truncated]&quot;;.
        /// </summary>
        public static string numericBox_js {
            get {
                return ResourceManager.GetString("numericBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.panelGroup = (function (params) {
        ///    this.id = params.id;
        ///    this.active = params.active;
        ///    this.hasErrors = params.hasErrors;
        ///
        ///    this.init = function () {
        ///
        ///        $(&apos;#&apos; + this.id + &apos; .panel .panel-heading a&apos;).click($.proxy(this.panelOpened, this));
        ///
        ///        if (this.hasErrors) {
        ///            $(&quot;html, body&quot;).animate({ scrollTop: 0 }, &apos;slow&apos;);
        ///        }
        ///
        ///        if (window.location.hash != &apos;&apos;) {
        ///            var anchoredPannel = $(window.location.hash);
        ///
        ///            if [rest of string was truncated]&quot;;.
        /// </summary>
        public static string panelGroup_js {
            get {
                return ResourceManager.GetString("panelGroup_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Bold_webfont_eot {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Bold_webfont_eot", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Bold_webfont_svg {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Bold_webfont_svg", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Bold_webfont_ttf {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Bold_webfont_ttf", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Bold_webfont_woff {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Bold_webfont_woff", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Medium_webfont_eot {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Medium_webfont_eot", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Medium_webfont_svg {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Medium_webfont_svg", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Medium_webfont_ttf {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Medium_webfont_ttf", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Medium_webfont_woff {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Medium_webfont_woff", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Regular_webfont_eot {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Regular_webfont_eot", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Regular_webfont_svg {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Regular_webfont_svg", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Regular_webfont_ttf {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Regular_webfont_ttf", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] ProximaNovaSoft_Regular_webfont_woff {
            get {
                object obj = ResourceManager.GetObject("ProximaNovaSoft_Regular_webfont_woff", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.radioList = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.name = params.name;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///    this.init = function () {
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.getForm(this.formId);
        ///			
        ///            $(&apos;[name=&quot;&apos; + this.name + &apos;&quot;]&apos;).each(function (index, value) {
        ///                form.addVolatileField($(value));
        ///            });
        ///        }
        ///    };
        ///
        ///    trooper.ui.registry.addContr [rest of string was truncated]&quot;;.
        /// </summary>
        public static string radioList_js {
            get {
                return ResourceManager.GetString("radioList_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] SearchBarView_cshtml {
            get {
                object obj = ResourceManager.GetObject("SearchBarView_cshtml", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.searchBox = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.name = params.name;
        ///    this.formId = params.formId;
        ///    this.dataSourceUrl = params.dataSourceUrl;
        ///    this.searchTextField = params.searchTextField;
        ///    this.searchValueField = params.searchValueField;
        ///    this.selectedTextField = params.selectedTextField;
        ///    this.scrollHeight = params.scrollHeight;
        ///    this.popoverPlacement = params.popoverPlacement;
        ///    this.popoutWidth = params.popoutWidth;
        ///	this.currentD [rest of string was truncated]&quot;;.
        /// </summary>
        public static string searchBox_js {
            get {
                return ResourceManager.GetString("searchBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .trooper.searchBox {
        ///    .popover-content {
        ///        padding: 0;
        ///
        ///        ul {
        ///            border: none;
        ///            outline: none;
        ///            width: 100%;
        ///            overflow-y: scroll;
        ///            margin: 0;
        ///            padding: 0;
        ///
        ///            li {
        ///                margin: 0;
        ///                padding: 2px 2px 2px 5px;
        ///                cursor: pointer;
        ///                border-bottom: 1px solid #e5e5e5;
        ///            }
        ///
        ///            li:hover {
        ///                background-color: #e3e3e3;
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        public static string searchBox_less {
            get {
                return ResourceManager.GetString("searchBox_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.selectList = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///	this.init = function () {
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            form.addVolatileField(this.id);
        ///        }
        ///    };
        ///
        ///	trooper.ui.registry.addControl(this.id, this, &apos;selectlist&apos;);
        ///    $(document).ready($.proxy(this.init, this));
        ///
        ///    return {
        ///
        ///    };
        ///});.
        /// </summary>
        public static string selectList_js {
            get {
                return ResourceManager.GetString("selectList_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function StdThemeSearchBar() {
        ///    return window[&apos;stdThemeSearchBar&apos;];
        ///}
        ///
        ///function StdThemeSearchBar() {
        ///    this.ignoreLoadingScreenElements = new Array();
        ///
        ///    $(document).ready($.proxy(this.init, this));
        ///}
        ///
        ///StdThemeSearchBar.prototype.searchRowOpen = false;
        ///
        ///StdThemeSearchBar.prototype.searchRowChanging = false;
        ///
        ///StdThemeSearchBar.prototype.searchRowNormalBg = &apos;#f0f0f0&apos;;
        ///
        ///StdThemeSearchBar.prototype.searchRowHightlightBg = &apos;#e8e8e8&apos;;
        ///
        ///StdThemeSearchBar.prototype.searchRowDefaultHeight = [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StdThemeSearchBar_js {
            get {
                return ResourceManager.GetString("StdThemeSearchBar_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .template-search-row {
        ///    border-bottom: 1px solid #af4e8b;
        ///    margin-top: -81px;
        ///    padding-top: 8px;
        ///    z-index: 1000;
        ///    width: 100%;
        ///    overflow: hidden;
        ///
        ///    .opacity-box {
        ///        background-color: #f0f0f0;
        ///        width: 100%;
        ///        height: 100%;
        ///        position: absolute;
        ///        opacity: .9;
        ///        top: 0;
        ///    }
        ///
        ///    .search-bar-buttons {
        ///        text-align: right;
        ///    }
        ///
        ///    .close-search-bar {
        ///        text-align: center;
        ///        display: block;
        ///        width: 100 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StdThemeSearchBar_less {
            get {
                return ResourceManager.GetString("StdThemeSearchBar_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function GetStdThemeTemplate() {
        ///    return window[&apos;stdThemeTemplate&apos;];
        ///}
        ///
        ///function StdThemeTemplate() {
        ///    $(document).ready($.proxy(this.init, this));
        ///}
        ///
        ///StdThemeTemplate.prototype.init = function () {
        ///    $(&apos;[data-toggle=offcanvas]&apos;).click(function () {
        ///        $(&apos;.row-offcanvas&apos;).toggleClass(&apos;active&apos;);
        ///    });
        ///
        ///    $(&apos;.submit-results button.close.any&apos;).click(function () {
        ///        $(&apos;.submit-results&apos;).hide(500);
        ///    });
        ///
        ///    $(&apos;.submit-results button.close.open-errors&apos;).click(function ( [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StdThemeTemplate_js {
            get {
                return ResourceManager.GetString("StdThemeTemplate_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @heroColor: #f18e00;
        ///@heroHightlightColor: #af4e8b;
        ///
        ///html {
        ///  overflow-x: hidden; /* Prevent scroll on narrow devices */
        ///}
        ///body {
        ///  padding-bottom: 70px;
        ///}
        ///
        ////*
        /// * Off Canvas
        /// * --------------------------------------------------
        /// */
        ///@media screen and (max-width: 767px) {
        ///  .row-offcanvas {
        ///    position: relative;
        ///    -webkit-transition: all 0.25s ease-out;
        ///    -moz-transition: all 0.25s ease-out;
        ///    transition: all 0.25s ease-out;
        ///  }
        ///
        ///  .row-offcanvas-left
        ///  .sidebar-offcanvas {
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StdThemeTemplate_less {
            get {
                return ResourceManager.GetString("StdThemeTemplate_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.table = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.rowSelectionMode = params.rowSelectionMode;
        ///    
        ///    this.rowSelected = new Array();
        ///    this.rowDblclicked = new Array();
        ///    this.rowUnselected = new Array();
        ///    this._selectedRows = new Array();	
        ///	
        ///    this.init = function () {       
        ///		
        ///		$(&apos;#&apos; + this.id + &apos; tbody tr&apos;).click($.proxy(this.rowClick, this));
        ///		$(&apos;#&apos; + this.id + &apos; tbody tr&apos;).dblclick($.proxy(this.rowDblclick, this));
        ///
        ///		this.fixFormAction();
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string table_js {
            get {
                return ResourceManager.GetString("table_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to table.table.trooper {
        ///
        ///    tbody tr td {
        ///        cursor: pointer;
        ///    }
        ///
        ///    tbody {
        ///        tr.bold td {
        ///            font-weight: bold;
        ///        }
        ///
        ///        tr.rule-over td {
        ///            border-top-width: 1px;
        ///            border-top-color: black;
        ///        }
        ///
        ///        tr.rule-over.rule-over-solid td {
        ///            border-top-style: solid;
        ///        }
        ///
        ///        tr.rule-over.rule-over-dashed td {
        ///            border-bottom-style: dashed;
        ///        }
        ///
        ///        tr.rule-under td {
        ///            border [rest of string was truncated]&quot;;.
        /// </summary>
        public static string table_less {
            get {
                return ResourceManager.GetString("table_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.textareaBox = (function (params)
        ///{
        ///	this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.maxLength = params.maxLength;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///	this.init = function () {
        ///		this.getInput().change($.proxy(this.checkInput, this));
        ///		
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            form.addVolatileField(this.id);
        ///        }
        ///    };
        ///	
        ///	this.getInput = function () {
        ///		return $(&apos;#&apos; + this.id [rest of string was truncated]&quot;;.
        /// </summary>
        public static string textareaBox_js {
            get {
                return ResourceManager.GetString("textareaBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.textBox = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.maxLength = params.maxLength;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///   
        ///    this.init = function () {
        ///		this.getInput().change($.proxy(this.checkInput, this));
        ///		
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            form.addVolatileField(this.id);
        ///        }
        ///    };
        ///	
        ///	this.getInput = function () {
        ///		return $(&apos;#&apos; + th [rest of string was truncated]&quot;;.
        /// </summary>
        public static string textBox_js {
            get {
                return ResourceManager.GetString("textBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var trooper = {};
        ///
        ///trooper.utility = {};
        ///
        ///trooper.utility._browser = (function() {
        ///	// returns { browser: &apos;name&apos;, version: number }
        ///	// browser can be: opera | chrome | safari | firefox | msie
        ///	this.getBrowser = function () {
        ///		var result = new Object();
        ///		result.browser = &apos;&apos;;
        ///		result.version = &apos;&apos;;
        ///		
        ///		var ua = navigator.userAgent;
        ///		var m = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\.?\d+(\.\d+)*)/i);
        ///
        ///		if (/trident/i.test(m[1])) {
        ///			var b = /\brv[ :]+(\d+(\.\d+)? [rest of string was truncated]&quot;;.
        /// </summary>
        public static string trooper_js {
            get {
                return ResourceManager.GetString("trooper_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .trooper.y-scrolling {
        ///        overflow-y: scroll;
        ///        border-top: 1px solid #e5e5e5;
        ///        border-left: 1px solid #e5e5e5;
        ///        border-bottom: 1px solid #e5e5e5;
        ///        border-top-left-radius: 4px;
        ///        border-bottom-left-radius: 4px;
        ///        padding-left: 10px;
        ///    }
        ///
        ///fieldset {
        ///    legend {
        ///        line-height: 30px;
        ///    }
        ///
        ///    fieldset {
        ///        margin-bottom: 20px;
        ///
        ///        legend {
        ///            font-size: 17px;
        ///            margin-bottom: 0;
        ///        }        
        ///    }     [rest of string was truncated]&quot;;.
        /// </summary>
        public static string trooper_less {
            get {
                return ResourceManager.GetString("trooper_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap trooper_png {
            get {
                object obj = ResourceManager.GetObject("trooper_png", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /** 
        ///* --------------------------------------------------------------------------------------
        ///* &lt;copyright file=&quot;BootstrapUpload.js&quot; company=&quot;Trooper Inc&quot;&gt;
        ///*     Copyright (c) Trooper 2014 - Onwards
        ///* &lt;/copyright&gt;
        ///* --------------------------------------------------------------------------------------
        ///*/
        ///
        /////
        ///// Turns a plain old upload form element into a bootstrap element 
        /////
        ///trooper.ui.control.upload = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.w [rest of string was truncated]&quot;;.
        /// </summary>
        public static string upload_js {
            get {
                return ResourceManager.GetString("upload_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to control-group.has-error .trooper.upload {
        ///    .uneditable-input,
        ///    .browse,
        ///    .clear {
        ///        border-color: #b94a48;
        ///    }
        ///}
        ///
        ///.trooper.upload {
        ///    .display.pretend-link {
        ///        color: blue;
        ///        text-decoration: underline;
        ///        cursor: pointer;
        ///    }
        ///}.
        /// </summary>
        public static string upload_less {
            get {
                return ResourceManager.GetString("upload_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.virtualModalWindow = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.title = params.title;
        ///    this.frameUrl = params.frameUrl;
        ///    this.frameHeight = params.frameHeight;
        ///    this.incCloseButton = params.incCloseButton;
        ///    this.buttons = params.buttons;
        ///    this.closeEvents = new Array();
        ///	
        ///	this.virtualId = &apos;BootstrapVirtualModalWindow_actual&apos;;
        ///	this.mainFocus = null;
        ///	this.focusReturned = false;
        ///
        ///    
        ///	this.init = function () {               
        ///		this.getInput().ch [rest of string was truncated]&quot;;.
        /// </summary>
        public static string virtualModalWindow_js {
            get {
                return ResourceManager.GetString("virtualModalWindow_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Identity user name cannot be null. User name not found in HttpContext or Windows Identity..
        /// </summary>
        public static string WindowsIdentityUsernameCannotBeNull {
            get {
                return ResourceManager.GetString("WindowsIdentityUsernameCannotBeNull", resourceCulture);
            }
        }
    }
}
