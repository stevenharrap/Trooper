//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trooper.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Trooper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CN.
        /// </summary>
        public static string ActiveDirectoryCn {
            get {
                return ResourceManager.GetString("ActiveDirectoryCn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to defaultNamingContext.
        /// </summary>
        public static string ActiveDirectoryDefaultNamingContext {
            get {
                return ResourceManager.GetString("ActiveDirectoryDefaultNamingContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to department.
        /// </summary>
        public static string ActiveDirectoryDepartment {
            get {
                return ResourceManager.GetString("ActiveDirectoryDepartment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to description.
        /// </summary>
        public static string ActiveDirectoryDescription {
            get {
                return ResourceManager.GetString("ActiveDirectoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to displayName.
        /// </summary>
        public static string ActiveDirectoryDisplayName {
            get {
                return ResourceManager.GetString("ActiveDirectoryDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DN.
        /// </summary>
        public static string ActiveDirectoryDn {
            get {
                return ResourceManager.GetString("ActiveDirectoryDn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dnsHostName.
        /// </summary>
        public static string ActiveDirectoryDnsHostName {
            get {
                return ResourceManager.GetString("ActiveDirectoryDnsHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to givenName.
        /// </summary>
        public static string ActiveDirectoryGivenName {
            get {
                return ResourceManager.GetString("ActiveDirectoryGivenName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to initials.
        /// </summary>
        public static string ActiveDirectoryInitials {
            get {
                return ResourceManager.GetString("ActiveDirectoryInitials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP://{0}/{1}.
        /// </summary>
        public static string ActiveDirectoryLdapPathFormat {
            get {
                return ResourceManager.GetString("ActiveDirectoryLdapPathFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mail.
        /// </summary>
        public static string ActiveDirectoryMail {
            get {
                return ResourceManager.GetString("ActiveDirectoryMail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to memberof.
        /// </summary>
        public static string ActiveDirectoryMemberOf {
            get {
                return ResourceManager.GetString("ActiveDirectoryMemberOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to middleName.
        /// </summary>
        public static string ActiveDirectoryMiddleName {
            get {
                return ResourceManager.GetString("ActiveDirectoryMiddleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mobile.
        /// </summary>
        public static string ActiveDirectoryMobile {
            get {
                return ResourceManager.GetString("ActiveDirectoryMobile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to physicalDeliveryOfficeName.
        /// </summary>
        public static string ActiveDirectoryPhysicalDeliveryOfficeName {
            get {
                return ResourceManager.GetString("ActiveDirectoryPhysicalDeliveryOfficeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP://RootDSE.
        /// </summary>
        public static string ActiveDirectoryRoot {
            get {
                return ResourceManager.GetString("ActiveDirectoryRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (SAMAccountName={0}).
        /// </summary>
        public static string ActiveDirectorySamAccountFormat {
            get {
                return ResourceManager.GetString("ActiveDirectorySamAccountFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sn.
        /// </summary>
        public static string ActiveDirectorySn {
            get {
                return ResourceManager.GetString("ActiveDirectorySn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to telephoneNumber.
        /// </summary>
        public static string ActiveDirectoryTelephoneNumber {
            get {
                return ResourceManager.GetString("ActiveDirectoryTelephoneNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to userPrincipalName.
        /// </summary>
        public static string ActiveDirectoryUserPrincipalName {
            get {
                return ResourceManager.GetString("ActiveDirectoryUserPrincipalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.button = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.url = params.url;
        ///    this.targetNewWindow = params.targetNewWindow;
        ///    this.launchLoadingOnClick = params.launchLoadingOnClick;
        ///    this.loadingScreenTitle = params.loadingScreenTitle;
        ///    this.confirmOnClick = params.confirmOnClick;
        ///    this.confirmTitle = params.confirmTitle;
        ///    this.submit = params.submit;
        ///
        ///    this.init = function () {        
        ///        $(&apos;#&apos; + this.id).click [rest of string was truncated]&quot;;.
        /// </summary>
        public static string button_js {
            get {
                return ResourceManager.GetString("button_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.checkBox = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///    this.init = function () {
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            form.addVolatileField(this.id);
        ///        }
        ///    };
        ///
        ///    var publicResult = {
        ///        id: trooper.utility.control.makeIdAccessor(this),
        ///    };
        ///
        ///    trooper.ui.registry.addControl(this.id, publicResult, &apos;che [rest of string was truncated]&quot;;.
        /// </summary>
        public static string checkBox_js {
            get {
                return ResourceManager.GetString("checkBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.checkBoxList = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.name = params.name;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///    this.init = function () {
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            $(&apos;[name=&apos; + this.name + &apos;]&apos;).each(function (index, value) {
        ///                form.addVolatileField($(value));
        ///            });
        ///        }
        ///    };
        ///
        ///    var publicResult = {
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string checkBoxList_js {
            get {
                return ResourceManager.GetString("checkBoxList_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.dateTimePicker = (function (params) {
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.dateTimeFormat = params.dateTimeFormat;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///    this.popoverPlacement = params.popoverPlacement;
        ///    this.utcOffset = params.utcOffset;
        ///    this.popoverId = params.popoverId;
        ///    this.minimum = params.minimum;
        ///	this.maximum = params.maximum;
        ///    this.potentialValue = null;
        ///    this.currentMonth = null;
        ///	
        ///    this.init = function () {        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string dateTimePicker_js {
            get {
                return ResourceManager.GetString("dateTimePicker_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .trooper.dateTimePicker {
        ///    table tr th {
        ///        width: 14%;
        ///    }
        ///
        ///    table tr {
        ///        td.day-this-month {
        ///	        font-weight: bold;
        ///            color: lightgray;	        
        ///            cursor: default;
        ///        }
        ///
        ///        td.day-is-selectable {
        ///            color: black;
        ///            cursor: pointer;
        ///        }
        ///
        ///        td.day-is-selectable:hover {
        ///            background: #333333;
        ///            color: #fff;
        ///        }
        ///
        ///        td.day-other-month {
        ///	        color: lightgray;
        ///	        [rest of string was truncated]&quot;;.
        /// </summary>
        public static string dateTimePicker_less {
            get {
                return ResourceManager.GetString("dateTimePicker_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.form = (function (params) {
        ///    this.id = params.id;
        ///    this.formIsDirty = false;
        ///
        ///    this.init = function ()
        ///    {        
        ///        $(&apos;#&apos; + this.id).click($.proxy(this.clicked, this));
        ///    };
        ///
        ///    /**
        ///     * Indicates that the field (which can be a field id or jquery object) is volatile
        ///     * and if it changes and the user has not saved the current record then an alert message
        ///     * should be raised if the user attempts to leave the page.
        ///     */
        ///    this.addVolatileFiel [rest of string was truncated]&quot;;.
        /// </summary>
        public static string form_js {
            get {
                return ResourceManager.GetString("form_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Affected server may require a restart..
        /// </summary>
        public static string MessageServerRestart {
            get {
                return ResourceManager.GetString("MessageServerRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.messagesPanel = (function (params)
        ///{
        ///    this.id = params.id;
        ///
        ///    this.init = function () {
        ///        $(&apos;#&apos; + this.id + &apos;.trooper.messages-panel button.close.close-bar&apos;).click(function () {
        ///            $(&apos;.trooper.messages-panel&apos;).hide(500);
        ///        });
        ///
        ///        $(&apos;#&apos; + this.id + &apos;.trooper.messages-panel button.close.open-messages&apos;).click(function () {
        ///            $(&apos;.trooper.messages-panel .messages&apos;).show(500);
        ///            $(&apos;.trooper.messages-panel button.close.open-messages&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string messagesPanel_js {
            get {
                return ResourceManager.GetString("messagesPanel_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AdditionalInfo.
        /// </summary>
        public static string MessageTitleAdditionalInfo {
            get {
                return ResourceManager.GetString("MessageTitleAdditionalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.numericBox = (function (params)
        ///{
        ///	this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.numericType = params.numericType;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///    this.minimum = parseFloat(params.minimum);
        ///
        ///    if (isNaN(this.minimum)) {
        ///        this.minimum = null;
        ///    }
        ///
        ///    this.maximum = parseFloat(params.maximum);
        ///
        ///    if (isNaN(this.maximum)) {
        ///        this.maximum = null;
        ///    }
        ///
        ///    this.decimalDigits = parseFloat(params.decimalDigits);
        ///
        ///    if ( [rest of string was truncated]&quot;;.
        /// </summary>
        public static string numericBox_js {
            get {
                return ResourceManager.GetString("numericBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.panelGroup = (function (params) {
        ///    this.id = params.id;
        ///    this.active = params.active;
        ///    this.hasErrors = params.hasErrors;
        ///
        ///    this.init = function () {
        ///
        ///        $(&apos;#&apos; + this.id + &apos; .panel .panel-heading a&apos;).click($.proxy(this.panelOpened, this));
        ///
        ///        if (this.hasErrors) {
        ///            $(&quot;html, body&quot;).animate({ scrollTop: 0 }, &apos;slow&apos;);
        ///        }
        ///
        ///        if (window.location.hash != &apos;&apos;) {
        ///            var anchoredPannel = $(window.location.hash);
        ///
        ///            if [rest of string was truncated]&quot;;.
        /// </summary>
        public static string panelGroup_js {
            get {
                return ResourceManager.GetString("panelGroup_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.popover = (function (params)
        ///{
        ///	this.id = params.id;
        ///	this._content = params.content;
        ///	this.title = params.title;
        ///	this.placement = params.placement;
        ///	this.placementAutoAssist = params.placementAutoAssist;
        ///	this.selector = params.selector;
        ///	this.behaviour = params.behaviour;
        ///    this._ignoreSelectors = new Array();
        ///
        ///	this.init = function () {
        ///		$(this.selector).popover(
        ///		{
        ///			content: $.proxy(this.content, this),
        ///			html: true,
        ///			placement: new Array(this.placementAutoAs [rest of string was truncated]&quot;;.
        /// </summary>
        public static string popover_js {
            get {
                return ResourceManager.GetString("popover_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.radioList = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.name = params.name;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///    this.init = function () {
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.getForm(this.formId);
        ///			
        ///            $(&apos;[name=&quot;&apos; + this.name + &apos;&quot;]&apos;).each(function (index, value) {
        ///                form.addVolatileField($(value));
        ///            });
        ///        }
        ///    };
        ///
        ///    var publicResult = {
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        public static string radioList_js {
            get {
                return ResourceManager.GetString("radioList_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.searchBox = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.name = params.name;
        ///    this.formId = params.formId;
        ///    this.dataSourceUrl = params.dataSourceUrl;
        ///    this.searchTextField = params.searchTextField;
        ///    this.searchValueField = params.searchValueField;
        ///    this.selectedTextField = params.selectedTextField;
        ///    this.scrollHeight = params.scrollHeight;
        ///    this.popoverPlacement = params.popoverPlacement;
        ///    this.popoutWidth = params.popoutWidth;
        ///	this.currentD [rest of string was truncated]&quot;;.
        /// </summary>
        public static string searchBox_js {
            get {
                return ResourceManager.GetString("searchBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .trooper.searchBox {
        ///    .popover-content {
        ///        padding: 0;
        ///
        ///        ul {
        ///            border: none;
        ///            outline: none;
        ///            width: 100%;
        ///            overflow-y: scroll;
        ///            margin: 0;
        ///            padding: 0;
        ///
        ///            li {
        ///                margin: 0;
        ///                padding: 2px 2px 2px 5px;
        ///                cursor: pointer;
        ///                border-bottom: 1px solid #e5e5e5;
        ///            }
        ///
        ///            li:hover {
        ///                background-color: #e3e3e3;
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        public static string searchBox_less {
            get {
                return ResourceManager.GetString("searchBox_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.selectList = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///	this.init = function () {
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            form.addVolatileField(this.id);
        ///        }
        ///    };
        ///
        ///	var publicResult = {
        ///	    id: trooper.utility.control.makeIdAccessor(this)
        ///	};
        ///
        ///	trooper.ui.registry.addControl(this.id, publicResult, &apos;selectlist&apos;);
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        public static string selectList_js {
            get {
                return ResourceManager.GetString("selectList_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.table = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.name = params.name;
        ///    this.rowSelectionMode = params.rowSelectionMode;
        ///    this.columns = params.columns;
        ///    this.postAction = params.postAction;
        ///
        ///    this.rowDblclicked = new Array();
        ///    this.rowUnselected = new Array();
        ///    this._selectedRows = new Array();	
        ///	
        ///    this.init = function () {       
        ///		
        ///        $(&apos;#&apos; + this.id + &apos; thead th&apos;).click($.proxy(this.columnClick, this [rest of string was truncated]&quot;;.
        /// </summary>
        public static string table_js {
            get {
                return ResourceManager.GetString("table_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to textarea.trooper.table-persisted-data {
        ///    width: 100%;
        ///    height: 50px;
        ///}
        ///
        ///table.table.trooper {
        ///
        ///    thead tr th {
        ///        cursor: default;
        ///    }
        ///
        ///    thead tr th.is-sortable {
        ///        cursor: pointer;
        ///    }
        ///
        ///    tbody tr td {
        ///        cursor: default;
        ///    }
        ///
        ///    tbody tr.is-selectable td {
        ///        cursor: pointer;
        ///    }
        ///
        ///    tbody {
        ///        tr.bold td {
        ///            font-weight: bold;
        ///        }
        ///
        ///        tr.rule-over td {
        ///            border-top-width: 1px;
        ///            border- [rest of string was truncated]&quot;;.
        /// </summary>
        public static string table_less {
            get {
                return ResourceManager.GetString("table_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.textareaBox = (function (params)
        ///{
        ///	this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.maxLength = params.maxLength;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///
        ///	this.init = function () {
        ///		this.getInput().change($.proxy(this.checkInput, this));
        ///		
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            form.addVolatileField(this.id);
        ///        }
        ///    };
        ///	
        ///	this.getInput = function () {
        ///		return $(&apos;#&apos; + this.id [rest of string was truncated]&quot;;.
        /// </summary>
        public static string textareaBox_js {
            get {
                return ResourceManager.GetString("textareaBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.textBox = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.maxLength = params.maxLength;
        ///    this.warnOnLeave = params.warnOnLeave;
        ///   
        ///    this.init = function () {
        ///		this.getInput().change($.proxy(this.checkInput, this));
        ///		
        ///        if (this.warnOnLeave) {
        ///            var form = trooper.ui.registry.getForm(this.formId);
        ///            form.addVolatileField(this.id);
        ///        }
        ///    };
        ///	
        ///	this.getInput = function () {
        ///		return $(&apos;#&apos; + th [rest of string was truncated]&quot;;.
        /// </summary>
        public static string textBox_js {
            get {
                return ResourceManager.GetString("textBox_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var trooper = {};
        ///
        ///trooper.utility = {};
        ///
        ///trooper.utility._browser = (function() {
        ///	// returns { browser: &apos;name&apos;, version: number }
        ///	// browser can be: opera | chrome | safari | firefox | msie
        ///	this.getBrowser = function () {
        ///		var result = new Object();
        ///		result.browser = &apos;&apos;;
        ///		result.version = &apos;&apos;;
        ///		
        ///		var ua = navigator.userAgent;
        ///		var m = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\.?\d+(\.\d+)*)/i);
        ///
        ///		if (/trident/i.test(m[1])) {
        ///			var b = /\brv[ :]+(\d+(\.\d+)? [rest of string was truncated]&quot;;.
        /// </summary>
        public static string trooper_js {
            get {
                return ResourceManager.GetString("trooper_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .trooper.y-scrolling {
        ///        overflow-y: scroll;
        ///        border-top: 1px solid #e5e5e5;
        ///        border-left: 1px solid #e5e5e5;
        ///        border-bottom: 1px solid #e5e5e5;
        ///        border-top-left-radius: 4px;
        ///        border-bottom-left-radius: 4px;
        ///        padding-left: 10px;
        ///    }
        ///
        ///fieldset {
        ///    legend {
        ///        line-height: 30px;
        ///    }
        ///
        ///    fieldset {
        ///        margin-bottom: 20px;
        ///
        ///        legend {
        ///            font-size: 17px;
        ///            margin-bottom: 0;
        ///        }        
        ///    }     [rest of string was truncated]&quot;;.
        /// </summary>
        public static string trooper_less {
            get {
                return ResourceManager.GetString("trooper_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /** 
        ///* --------------------------------------------------------------------------------------
        ///* &lt;copyright file=&quot;upload.js&quot; company=&quot;Trooper Inc&quot;&gt;
        ///*     Copyright (c) Trooper 2014 - Onwards
        ///* &lt;/copyright&gt;
        ///* --------------------------------------------------------------------------------------
        ///*/
        ///
        /////
        ///// Turns a plain old upload form element into a Rabbit element 
        /////
        ///trooper.ui.control.upload = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.formId = params.formId;
        ///    this.warnOnLeave = [rest of string was truncated]&quot;;.
        /// </summary>
        public static string upload_js {
            get {
                return ResourceManager.GetString("upload_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to control-group.has-error .trooper.upload {
        ///    .uneditable-input,
        ///    .browse,
        ///    .clear {
        ///        border-color: #b94a48;
        ///    }
        ///}
        ///
        ///.trooper.upload {
        ///    .display.pretend-link {
        ///        color: blue;
        ///        text-decoration: underline;
        ///        cursor: pointer;
        ///    }
        ///}.
        /// </summary>
        public static string upload_less {
            get {
                return ResourceManager.GetString("upload_less", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to trooper.ui.control.virtualModalWindow = (function (params)
        ///{
        ///    this.id = params.id;
        ///    this.title = params.title;
        ///    this.frameUrl = params.frameUrl;
        ///    this.frameHeight = params.frameHeight;
        ///    this.incCloseButton = params.incCloseButton;
        ///    this.buttons = params.buttons;
        ///    this.closeEvents = new Array();
        ///	
        ///	this.virtualId = &apos;BootstrapVirtualModalWindow_actual&apos;;
        ///	this.mainFocus = null;
        ///	this.focusReturned = false;
        ///
        ///    
        ///	this.init = function () {               
        ///		this.getInput().ch [rest of string was truncated]&quot;;.
        /// </summary>
        public static string virtualModalWindow_js {
            get {
                return ResourceManager.GetString("virtualModalWindow_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Identity user name cannot be null. User name not found in HttpContext or Windows Identity..
        /// </summary>
        public static string WindowsIdentityUsernameCannotBeNull {
            get {
                return ResourceManager.GetString("WindowsIdentityUsernameCannotBeNull", resourceCulture);
            }
        }
    }
}
